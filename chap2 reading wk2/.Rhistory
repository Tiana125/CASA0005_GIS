plot(world["continent"], reset = FALSE)
library(sp)
world_sp = as(world, Class = "Spatial")
names(world)
install.packages("spData")
library(spData)        # load geographic data
library(spDataLarge)   # load larger geographic data
library(spData)        # load geographic data
remotes::install_github("Nowosad/spDataLarge")
install.packages("remotes")
remotes::install_github("Nowosad/spDataLarge")
remotes::install_github("Nowosad/spDataLarge")
install.packages("spDataLarge", repos = "https://nowosad.github.io/drat/", type = "source")
install.packages("spDataLarge", repos = "https://nowosad.github.io/drat/", type = "source")
library(sp)
library(sf)
library(spData)        # load geographic data
library(spDataLarge)   # load larger geographic data
world_sp = as(world, Class = "Spatial")
plot(world["continent"], reset = FALSE)
cex = sqrt(world$pop) / 10000
world_cents = st_centroid(world, of_largest = TRUE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
summary(world$geom)
summary(world)
summary(world$geom)
?plot()
plot(st_geometry(world_cents), add = TRUE, cex = cex)
plot(world["continent"], reset = FALSE)
#cex = sqrt(world$pop) / 10000
world_cents = st_centroid(world, of_largest = TRUE)
plot(st_geometry(world_cents), add = TRUE)
plot(st_geometry(world_cents), add = TRUE)
cex = sqrt(world$pop) / 10000
plot(st_geometry(world_cents), add = TRUE, cex = cex)
plot(world["continent"], reset = FALSE)
cex = sqrt(world$pop) / 10000
world_cents = st_centroid(world, of_largest = TRUE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
world$pop
plot(st_geometry(world_cents), add = TRUE, cex = 1)
plot(world["continent"], reset = FALSE)
plot(st_geometry(world_cents), add = TRUE, cex = 1)
plot(world["continent"], reset = FALSE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
cex = sqrt(world$pop) / 100000
plot(st_geometry(world_cents), add = TRUE, cex = cex)
plot(world["continent"], reset = FALSE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
plot(world["continent"], reset = FALSE)
cex = sqrt(world$pop) / 1000
plot(st_geometry(world_cents), add = TRUE, cex = cex)
cex = sqrt(world$pop) / 10000
plot(st_geometry(world_cents), add = TRUE, cex = cex)
plot(world["continent"], reset = FALSE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_asia = world[world$continent == "Asia", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
world_asia = world[world$continent == "Asia", ]
asia = st_union(world_asia)
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
asia = st_union(world_asia)
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_asia = world[world$continent == "Asia", ]
asia = st_union(world_asia)
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_asia = world[world$continent == "Asia", ]
asia = st_union(world_asia)
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_asia = world[world$continent == "Asia", ]
asia = st_union(world_asia)
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_asia = world[world$continent == "Asia", ]
asia = st_union(world_asia)
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_asia = world[world$continent == "Asia", ]
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_africa = world[world$continent == "Africa", ]
nigeria = world[world$name_long == "Nigeria", ]
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0, 0.5, 0.1, 1), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0.5, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(9, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(1,1,1,1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(1,-1,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(1,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(1,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(-1,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(2,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(3,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,1,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,0,1,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(1,0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,1,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,1,1,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,1,0,1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,2,0,2), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,2,0,2), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,10,0,10), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,-10,0,10), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,-10,0,110), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0,-10,0,-10), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0, 1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0, 0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(1, 0, 0,0), col = "gray", lwd = 3)
nigeria = world[world$name_long == "Nigeria", ]
plot(st_geometry(nigeria), expandBB = c(1, 0, 1,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0,0,0), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0,0,0,0, col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0,0,0,0), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.2, 0.1, 1.5), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 5)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 0)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 8)
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(nigeria), col = "white", lwd = 3, main = "Nigeria in context", border = "lightgrey", expandBB = c(0.5, 0.2, 0.5, 0.2))
library(sp)
library(sf)
library(spData)        # load geographic data
library(spDataLarge)   # load larger geographic data
world_sp = as(world, Class = "Spatial")
plot(st_geometry(nigeria), col = "white", lwd = 3, main = "Nigeria in context", border = "lightgrey", expandBB = c(0.5, 0.2, 0.5, 0.2))
nigeria = world[world$name_long == "Nigeria", ]
plot(st_geometry(nigeria), col = "white", lwd = 3, main = "Nigeria in context", border = "lightgrey", expandBB = c(0.5, 0.2, 0.5, 0.2))
plot(st_geometry(world), lty = 3, add = TRUE, border = "grey")
plot(st_geometry(nigeria), col = "yellow", add = TRUE, border = "darkgrey")
plot(st_geometry(world), lty = 3, add = TRUE, border = "grey")
plot.new
plot(st_geometry(world), lty = 3, add = TRUE, border = "grey")
library(sp)
library(sf)
library(spData)        # load geographic data
library(spDataLarge)   # load larger geographic data
plot(st_geometry(world), lty = 3, add = TRUE, border = "grey")
plot.new(st_geometry(world), lty = 3, add = TRUE, border = "grey")
library(sp)
library(sf)
library(spData)        # load geographic data
library(spDataLarge)   # load larger geographic data
world_sp = as(world, Class = "Spatial")
plot(world["continent"], reset = FALSE)
cex = sqrt(world$pop) / 10000
world_cents = st_centroid(world, of_largest = TRUE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
world_asia = world[world$continent == "Asia", ]
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
world_africa = world[world$continent == "Africa", ]
nigeria = world[world$name_long == "Nigeria", ]
#expandBB - bounding box; lwd - line width
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 3)
plot(world_africa[0], add = TRUE)
plot(st_geometry(nigeria), col = "white", lwd = 3, main = "Nigeria in context", border = "lightgrey", expandBB = c(0.5, 0.2, 0.5, 0.2))
plot(st_geometry(world), lty = 3, add = TRUE, border = "grey")
plot(st_geometry(nigeria), col = "yellow", add = TRUE, border = "darkgrey")
a = africa[grepl("Niger", africa$name_long), ]
ncentre = st_centroid(a)
ncentre_num = st_coordinates(ncentre)
text(x = ncentre_num[, 1], y = ncentre_num[, 2], labels = a$name_long)
world_sp = as(world, Class = "Spatial")
world_africa = world[world$continent == "Africa", ]
plot(st_geometry(world), lty = 3, add = TRUE, border = "grey")
#expandBB - bounding box; lwd - line width
plot(st_geometry(nigeria), expandBB = c(0.3, 0.5, 0.1, 1), col = "gray", lwd = 3)
plot(st_geometry(world), lty = 3, add = TRUE, border = "grey")
a = africa[grepl("Niger", africa$name_long), ]
a = world_africa[grepl("Niger", africa$name_long), ]
a = world_africa[grepl("Niger", world_africa$name_long), ]
ncentre = st_centroid(a)
ncentre_num = st_coordinates(ncentre)
text(x = ncentre_num[, 1], y = ncentre_num[, 2], labels = a$name_long)
a = world_africa[grepl("Niger", world_africa$name_long),]
a = world_africa[grepl("Niger", world_africa$name_long)]
text( labels = a$name_long)
View(a)
View(world_africa)
a = world_africa[grepl("Niger", world_africa$name_long)]
raster_filepath = system.file("raster/srtm.tif", package = "spDataLarge")
new_raster = raster(raster_filepath)
library(tidyverse)
new_raster = raster(raster_filepath)
install.packages("raster")
library(raster)
library(tidyverse)
new_raster = raster(raster_filepath)
View(new_raster)
new_raster
help("raster-package")
plot(new_raster)
spplot(new_raster)
levelplot(new_raster)
plot(new_raster)
raster::writeFormats()
new_raster2 = raster(nrows = 6, ncols = 6, res = 0.5,
xmn = -1.5, xmx = 1.5, ymn = -1.5, ymx = 1.5,
vals = 1:36)
View(new_raster2)
new_raster2
multi_raster_file = system.file("raster/landsat.tif", package = "spDataLarge")
r_brick = brick(multi_raster_file)
raster_on_disk = raster(r_brick, layer = 1)
raster_in_memory = raster(xmn = 301905, xmx = 335745,
ymn = 4111245, ymx = 4154085,
res = 30)
values(raster_in_memory) = sample(seq_len(ncell(raster_in_memory)))
crs(raster_in_memory) = crs(raster_on_disk)
r_stack
r_stack = stack(raster_in_memory, raster_on_disk)
r_stack
my_raster=raster(nrows = 10, ncols = 10,
vals = 0:10)
my_raster=raster(nrows = 10, ncols = 10,
xmn = 0, xmx = 10, ymn = 0, ymx = 10,
)
plot(my_raster)
my_raster=raster(nrows = 10, ncols = 10,
xmn = 0, xmx = 10, ymn = 0, ymx = 10,
)
plot(my_raster)
my_raster=raster(nrows = 10, ncols = 10, vals = runif(n = 100, min = 0, max = 10))
plot(my_raster)
crs_data = rgdal::make_EPSG()
View(crs_data)
new_vector = st_read(vector_filepath)
vector_filepath = system.file("vector/zion.gpkg", package = "spDataLarge")
new_vector = st_read(vector_filepath)
library(sf)
new_vector = st_read(vector_filepath)
